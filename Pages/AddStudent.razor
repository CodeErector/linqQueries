@page "/addstudent"
@using linqQueries.Data;
@using linqQueries.Model;
@inject AppDbContext _db
<h3>AddStudent</h3>

<EditForm Model="@student" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <label for="name">Name:</label>
    <InputText id="name" @bind-Value="student.sname" class="form-control" />
    <br />
    <label for="major">Major:</label>
    <InputText id="major" @bind-Value="student.major" class="form-control" />
    <br />
    <label for="standing">Standing:</label>
    <InputText id="standing" @bind-Value="student.standing" class="form-control" />
    <br />
    <label for="age">Age:</label>
    <InputNumber id="age" @bind-Value="student.age" class="form-control" />
    <br />
    <label for="marks">Marks:</label>
    <InputNumber id="marks" @bind-Value="student.marks" class="form-control" />
    <br />
    <button type="submit">Save</button>
</EditForm>

<table>
    <tbody>
        @foreach (var currentStudent in students)
        {
            <tr>
                <td>@currentStudent.sname</td>
                <td>@currentStudent.major</td>
                <td>@currentStudent.standing</td>
                <td>@currentStudent.age</td>
                <td>@currentStudent.marks</td>
                <td><button @onclick="() => EditStudent(currentStudent)">Edit</button></td>
                <td><button @onclick="() => DeleteStudent(currentStudent)">Delete</button></td>
            </tr>
        }
    </tbody>
</table>

@code {
    Student student = new Student();
    List<Student> students = new List<Student>();

    protected override void OnInitialized()
    {
        LoadStudents();
    }

    void LoadStudents()
    {
        students = _db.stu.ToList();
    }

    void HandleSubmit()
    {
        if (student.sid == 0)
        {
            _db.Add(student);
        }
        else
        {
            _db.Update(student);
        }

        _db.SaveChanges();
        student = new Student(); // Clear the form after submission
        LoadStudents(); // Reload users after submission
    }

    void EditStudent(Student currentStudent)
    {
        student = currentStudent;
    }

    void DeleteStudent(Student currentStudent)
    {
        _db.Remove(currentStudent);
        _db.SaveChanges();
        LoadStudents(); // Reload users after deletion
    }
}