// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using linqQueries.Data;

#nullable disable

namespace linqQueries.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231220100448_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("linqQueries.Model.Class", b =>
                {
                    b.Property<int>("cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cid"));

                    b.Property<int?>("Facultyfid")
                        .HasColumnType("int");

                    b.Property<int>("fid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("roomNo")
                        .HasColumnType("int");

                    b.HasKey("cid");

                    b.HasIndex("Facultyfid");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("linqQueries.Model.Depart", b =>
                {
                    b.Property<int>("depid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("depid"));

                    b.Property<string>("dName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("depid");

                    b.ToTable("departs");
                });

            modelBuilder.Entity("linqQueries.Model.Enrolled", b =>
                {
                    b.Property<int>("eid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eid"));

                    b.Property<int>("cid")
                        .HasColumnType("int");

                    b.Property<int?>("clscid")
                        .HasColumnType("int");

                    b.Property<int?>("facultyfid")
                        .HasColumnType("int");

                    b.Property<int>("fid")
                        .HasColumnType("int");

                    b.Property<int>("sid")
                        .HasColumnType("int");

                    b.HasKey("eid");

                    b.HasIndex("clscid");

                    b.HasIndex("facultyfid");

                    b.ToTable("Enrolled");
                });

            modelBuilder.Entity("linqQueries.Model.Faculty", b =>
                {
                    b.Property<int>("fid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fid"));

                    b.Property<int>("depid")
                        .HasColumnType("int");

                    b.Property<string>("fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("standing")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fid");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("linqQueries.Model.Student", b =>
                {
                    b.Property<int>("sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sid"));

                    b.Property<int?>("Enrolledeid")
                        .HasColumnType("int");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("major")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("marks")
                        .HasColumnType("int");

                    b.Property<string>("sname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("standing")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sid");

                    b.HasIndex("Enrolledeid");

                    b.ToTable("stu");
                });

            modelBuilder.Entity("linqQueries.Model.Class", b =>
                {
                    b.HasOne("linqQueries.Model.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("Facultyfid");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("linqQueries.Model.Enrolled", b =>
                {
                    b.HasOne("linqQueries.Model.Class", "cls")
                        .WithMany()
                        .HasForeignKey("clscid");

                    b.HasOne("linqQueries.Model.Faculty", "faculty")
                        .WithMany()
                        .HasForeignKey("facultyfid");

                    b.Navigation("cls");

                    b.Navigation("faculty");
                });

            modelBuilder.Entity("linqQueries.Model.Student", b =>
                {
                    b.HasOne("linqQueries.Model.Enrolled", null)
                        .WithMany("students")
                        .HasForeignKey("Enrolledeid");
                });

            modelBuilder.Entity("linqQueries.Model.Enrolled", b =>
                {
                    b.Navigation("students");
                });
#pragma warning restore 612, 618
        }
    }
}
